{"ast":null,"code":"import React from'react';import MyTimer from'./MyTimer';// Adjust the import path based on your file structure\nimport{useNavigate}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const navigate=useNavigate();return/*#__PURE__*/_jsxs(\"div\",{style:{width:\"300px\",margin:\"auto\"},children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate(\"/\"),children:\"Go to Home\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(MyTimer,{timerID:0,initialMinutes:35}),/*#__PURE__*/_jsx(MyTimer,{timerID:1,initialMinutes:45})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(MyTimer,{timerID:2,initialMinutes:35}),/*#__PURE__*/_jsx(MyTimer,{timerID:3,initialMinutes:45})]})]});};export default App;// import React from \"react\";\n// import {useNavigate} from \"react-router-dom\";\n// import '../styles/styles.css';\n// // https://www.geeksforgeeks.org/how-to-create-a-countdown-timer-using-reactjs/\n//\n// var countdowns = {}; // Object to store countdown intervals for each timer\n//\n// function startTimer(duration, timerId) {\n//     var time = duration * 60; // Convert minutes to seconds\n//     if (countdowns[timerId]) clearInterval(countdowns[timerId]); // Clear existing countdown for this timer\n//\n//     countdowns[timerId] = setInterval(function() {\n//         time--;\n//         var hours = Math.floor(time / 3600);\n//         var minutes = Math.floor((time % 3600) / 60);\n//         var seconds = time % 60;\n//\n//         hours = hours < 10 ? '0' + hours : hours; // If the hours is not 2 digits, add a '0'\n//         minutes = minutes < 10 ? '0' + minutes : minutes;\n//         seconds = seconds < 10 ? '0' + seconds : seconds;\n//\n//         document.getElementById('timer' + timerId).innerText = hours + ':' + minutes + ':' + seconds;\n//\n//         if (time <= 0) clearInterval(countdowns[timerId]);\n//     }, 1000);\n// }\n//\n// function resetTimer(timerId, initialTime) {\n//     if (countdowns[timerId]) clearInterval(countdowns[timerId]);\n//     // document.getElementById('timer' + timerId).innerText = initialTime;\n// }\n//\n// function Timers() {\n//     const navigate = useNavigate();\n//     return (\n//         <div>\n//             <h1>Laundry Timer</h1>\n//             <h2>Left Room</h2>\n//             <div class=\"row\">\n//                 <div class=\"col\">\n//                     <h2>{timer}</h2>\n//                     <div id=\"timer1\" class=\"timer\">00:00:00</div>\n//                     <button onClick={startTimer(35, '1')}>Start Washer Timer</button>\n//                     <button onClick={resetTimer('1','00:35:00')}>Reset Timer</button>\n//                 </div>\n//                 <div class=\"col\">\n//                     <div id=\"timer2\" class=\"timer\">00:00:00</div>\n//                     <button onClick={startTimer(35, '2')}>Start Dryer Timer</button>\n//                     <button onClick={resetTimer('2', '00:35:00')}>Reset Timer</button>\n//                 </div>\n//             </div>\n//\n//             <h2>Right Room</h2>\n//     <div class=\"row\">\n//         <div class=\"col\">\n//             <div id=\"timer3\" class=\"timer\">00:00:00</div>\n//             <button onclick=\"startTimer(35, '3')\">Start Washer Timer</button>\n//             <button onclick=\"resetTimer('3', '00:35:00')\">Reset Timer</button>\n//         </div>\n//         <div class=\"col\">\n//             <div id=\"timer4\" class=\"timer\">00:00:00</div>\n//             <button onclick=\"startTimer(45, '4')\">Start Dryer Timer</button>\n//             <button onclick=\"resetTimer('4', '00:45:00')\">Reset Timer</button>\n//         </div>\n//     </div>\n//         </div>\n//     )\n// }\n//\n// export default Timers;","map":{"version":3,"names":["React","MyTimer","useNavigate","jsx","_jsx","jsxs","_jsxs","App","navigate","style","width","margin","children","onClick","timerID","initialMinutes"],"sources":["/Users/luke/Desktop/spr24/wp2/laundry-coms/src/pages/Timers.jsx"],"sourcesContent":["import React from 'react';\nimport MyTimer from './MyTimer'; // Adjust the import path based on your file structure\nimport {useNavigate} from \"react-router-dom\";\n\nconst App = () => {\n    const navigate = useNavigate();\n    \n    return (\n        <div style={{ width: \"300px\", margin: \"auto\" }}>\n            <button onClick={() => navigate(\"/\")}>Go to Home</button>\n            <div>\n                <MyTimer timerID = {0} initialMinutes={35} />\n                <MyTimer timerID = {1} initialMinutes={45} />\n            </div>\n            <div>\n                <MyTimer timerID = {2} initialMinutes={35} />\n                <MyTimer timerID = {3} initialMinutes={45} />\n            </div>\n        </div>\n    );\n};\n\nexport default App;\n\n\n\n\n\n// import React from \"react\";\n// import {useNavigate} from \"react-router-dom\";\n// import '../styles/styles.css';\n// // https://www.geeksforgeeks.org/how-to-create-a-countdown-timer-using-reactjs/\n//\n// var countdowns = {}; // Object to store countdown intervals for each timer\n//\n// function startTimer(duration, timerId) {\n//     var time = duration * 60; // Convert minutes to seconds\n//     if (countdowns[timerId]) clearInterval(countdowns[timerId]); // Clear existing countdown for this timer\n//\n//     countdowns[timerId] = setInterval(function() {\n//         time--;\n//         var hours = Math.floor(time / 3600);\n//         var minutes = Math.floor((time % 3600) / 60);\n//         var seconds = time % 60;\n//\n//         hours = hours < 10 ? '0' + hours : hours; // If the hours is not 2 digits, add a '0'\n//         minutes = minutes < 10 ? '0' + minutes : minutes;\n//         seconds = seconds < 10 ? '0' + seconds : seconds;\n//\n//         document.getElementById('timer' + timerId).innerText = hours + ':' + minutes + ':' + seconds;\n//\n//         if (time <= 0) clearInterval(countdowns[timerId]);\n//     }, 1000);\n// }\n//\n// function resetTimer(timerId, initialTime) {\n//     if (countdowns[timerId]) clearInterval(countdowns[timerId]);\n//     // document.getElementById('timer' + timerId).innerText = initialTime;\n// }\n//\n// function Timers() {\n//     const navigate = useNavigate();\n//     return (\n//         <div>\n//             <h1>Laundry Timer</h1>\n//             <h2>Left Room</h2>\n//             <div class=\"row\">\n//                 <div class=\"col\">\n//                     <h2>{timer}</h2>\n//                     <div id=\"timer1\" class=\"timer\">00:00:00</div>\n//                     <button onClick={startTimer(35, '1')}>Start Washer Timer</button>\n//                     <button onClick={resetTimer('1','00:35:00')}>Reset Timer</button>\n//                 </div>\n//                 <div class=\"col\">\n//                     <div id=\"timer2\" class=\"timer\">00:00:00</div>\n//                     <button onClick={startTimer(35, '2')}>Start Dryer Timer</button>\n//                     <button onClick={resetTimer('2', '00:35:00')}>Reset Timer</button>\n//                 </div>\n//             </div>\n//\n//             <h2>Right Room</h2>\n//     <div class=\"row\">\n//         <div class=\"col\">\n//             <div id=\"timer3\" class=\"timer\">00:00:00</div>\n//             <button onclick=\"startTimer(35, '3')\">Start Washer Timer</button>\n//             <button onclick=\"resetTimer('3', '00:35:00')\">Reset Timer</button>\n//         </div>\n//         <div class=\"col\">\n//             <div id=\"timer4\" class=\"timer\">00:00:00</div>\n//             <button onclick=\"startTimer(45, '4')\">Start Dryer Timer</button>\n//             <button onclick=\"resetTimer('4', '00:45:00')\">Reset Timer</button>\n//         </div>\n//     </div>\n//         </div>\n//     )\n// }\n//\n// export default Timers;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,OAAO,KAAM,WAAW,CAAE;AACjC,OAAQC,WAAW,KAAO,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE7C,KAAM,CAAAC,GAAG,CAAGA,CAAA,GAAM,CACd,KAAM,CAAAC,QAAQ,CAAGN,WAAW,CAAC,CAAC,CAE9B,mBACII,KAAA,QAAKG,KAAK,CAAE,CAAEC,KAAK,CAAE,OAAO,CAAEC,MAAM,CAAE,MAAO,CAAE,CAAAC,QAAA,eAC3CR,IAAA,WAAQS,OAAO,CAAEA,CAAA,GAAML,QAAQ,CAAC,GAAG,CAAE,CAAAI,QAAA,CAAC,YAAU,CAAQ,CAAC,cACzDN,KAAA,QAAAM,QAAA,eACIR,IAAA,CAACH,OAAO,EAACa,OAAO,CAAI,CAAE,CAACC,cAAc,CAAE,EAAG,CAAE,CAAC,cAC7CX,IAAA,CAACH,OAAO,EAACa,OAAO,CAAI,CAAE,CAACC,cAAc,CAAE,EAAG,CAAE,CAAC,EAC5C,CAAC,cACNT,KAAA,QAAAM,QAAA,eACIR,IAAA,CAACH,OAAO,EAACa,OAAO,CAAI,CAAE,CAACC,cAAc,CAAE,EAAG,CAAE,CAAC,cAC7CX,IAAA,CAACH,OAAO,EAACa,OAAO,CAAI,CAAE,CAACC,cAAc,CAAE,EAAG,CAAE,CAAC,EAC5C,CAAC,EACL,CAAC,CAEd,CAAC,CAED,cAAe,CAAAR,GAAG,CAMlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}