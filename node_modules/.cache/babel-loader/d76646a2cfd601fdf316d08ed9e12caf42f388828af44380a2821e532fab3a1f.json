{"ast":null,"code":"var _jsxFileName = \"/Users/luke/Desktop/spr24/wp2/laundry-coms/src/pages/Timers.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport MyTimer from './MyTimer'; // Adjust the import path based on your file structure\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const navigate = useNavigate();\n  const socket = new WebSocket('ws://localhost:3000');\n  socket.onopen = function (event) {\n    console.log('Connection is open', event);\n    socket.send('Hello, server!');\n  };\n\n  // Event listener for receiving messages from the server\n  socket.onmessage = function (event) {\n    console.log('Message from server:', event.data);\n  };\n\n  // Event listener for handling possible errors\n  socket.onerror = function (error) {\n    console.error('WebSocket error:', error);\n  };\n\n  // Event listener for when the connection is closed\n  socket.onclose = function (event) {\n    console.log('Connection is closed', event);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"300px\",\n      margin: \"auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate(\"/\"),\n      children: \"Go to Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(MyTimer, {\n        initialMinutes: 35\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MyTimer, {\n        initialMinutes: 45\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(MyTimer, {\n        initialMinutes: 35\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MyTimer, {\n        initialMinutes: 45\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendAMessage(\"Start conn\"),\n      children: \"mes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\n\n// import React from \"react\";\n// import {useNavigate} from \"react-router-dom\";\n// import '../styles/styles.css';\n// // https://www.geeksforgeeks.org/how-to-create-a-countdown-timer-using-reactjs/\n//\n// var countdowns = {}; // Object to store countdown intervals for each timer\n//\n// function startTimer(duration, timerId) {\n//     var time = duration * 60; // Convert minutes to seconds\n//     if (countdowns[timerId]) clearInterval(countdowns[timerId]); // Clear existing countdown for this timer\n//\n//     countdowns[timerId] = setInterval(function() {\n//         time--;\n//         var hours = Math.floor(time / 3600);\n//         var minutes = Math.floor((time % 3600) / 60);\n//         var seconds = time % 60;\n//\n//         hours = hours < 10 ? '0' + hours : hours; // If the hours is not 2 digits, add a '0'\n//         minutes = minutes < 10 ? '0' + minutes : minutes;\n//         seconds = seconds < 10 ? '0' + seconds : seconds;\n//\n//         document.getElementById('timer' + timerId).innerText = hours + ':' + minutes + ':' + seconds;\n//\n//         if (time <= 0) clearInterval(countdowns[timerId]);\n//     }, 1000);\n// }\n//\n// function resetTimer(timerId, initialTime) {\n//     if (countdowns[timerId]) clearInterval(countdowns[timerId]);\n//     // document.getElementById('timer' + timerId).innerText = initialTime;\n// }\n//\n// function Timers() {\n//     const navigate = useNavigate();\n//     return (\n//         <div>\n//             <h1>Laundry Timer</h1>\n//             <h2>Left Room</h2>\n//             <div class=\"row\">\n//                 <div class=\"col\">\n//                     <h2>{timer}</h2>\n//                     <div id=\"timer1\" class=\"timer\">00:00:00</div>\n//                     <button onClick={startTimer(35, '1')}>Start Washer Timer</button>\n//                     <button onClick={resetTimer('1','00:35:00')}>Reset Timer</button>\n//                 </div>\n//                 <div class=\"col\">\n//                     <div id=\"timer2\" class=\"timer\">00:00:00</div>\n//                     <button onClick={startTimer(35, '2')}>Start Dryer Timer</button>\n//                     <button onClick={resetTimer('2', '00:35:00')}>Reset Timer</button>\n//                 </div>\n//             </div>\n//\n//             <h2>Right Room</h2>\n//     <div class=\"row\">\n//         <div class=\"col\">\n//             <div id=\"timer3\" class=\"timer\">00:00:00</div>\n//             <button onclick=\"startTimer(35, '3')\">Start Washer Timer</button>\n//             <button onclick=\"resetTimer('3', '00:35:00')\">Reset Timer</button>\n//         </div>\n//         <div class=\"col\">\n//             <div id=\"timer4\" class=\"timer\">00:00:00</div>\n//             <button onclick=\"startTimer(45, '4')\">Start Dryer Timer</button>\n//             <button onclick=\"resetTimer('4', '00:45:00')\">Reset Timer</button>\n//         </div>\n//     </div>\n//         </div>\n//     )\n// }\n//\n// export default Timers;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","MyTimer","useNavigate","jsxDEV","_jsxDEV","App","_s","navigate","socket","WebSocket","onopen","event","console","log","send","onmessage","data","onerror","error","onclose","style","width","margin","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","initialMinutes","sendAMessage","_c","$RefreshReg$"],"sources":["/Users/luke/Desktop/spr24/wp2/laundry-coms/src/pages/Timers.jsx"],"sourcesContent":["import React from 'react';\nimport MyTimer from './MyTimer'; // Adjust the import path based on your file structure\nimport {useNavigate} from \"react-router-dom\";\n\nconst App = () => {\n    const navigate = useNavigate();\n    const socket = new WebSocket('ws://localhost:3000');\n\n    socket.onopen = function(event) {\n        console.log('Connection is open', event);\n        socket.send('Hello, server!');\n    };\n    \n    // Event listener for receiving messages from the server\n    socket.onmessage = function(event) {\n        console.log('Message from server:', event.data);\n    };\n\n    // Event listener for handling possible errors\n    socket.onerror = function(error) {\n        console.error('WebSocket error:', error);\n    };\n\n    // Event listener for when the connection is closed\n    socket.onclose = function(event) {\n        console.log('Connection is closed', event);\n    };\n\n\n    return (\n        <div style={{ width: \"300px\", margin: \"auto\" }}>\n            <button onClick={() => navigate(\"/\")}>Go to Home</button>\n            <div>\n                <MyTimer initialMinutes={35} />\n                <MyTimer initialMinutes={45} />\n            </div>\n            <div>\n                <MyTimer initialMinutes={35} />\n                <MyTimer initialMinutes={45} />\n            </div>\n            <button onClick={sendAMessage(\"Start conn\")}>mes</button>\n        </div>\n    );\n};\n\nexport default App;\n\n\n\n\n\n// import React from \"react\";\n// import {useNavigate} from \"react-router-dom\";\n// import '../styles/styles.css';\n// // https://www.geeksforgeeks.org/how-to-create-a-countdown-timer-using-reactjs/\n//\n// var countdowns = {}; // Object to store countdown intervals for each timer\n//\n// function startTimer(duration, timerId) {\n//     var time = duration * 60; // Convert minutes to seconds\n//     if (countdowns[timerId]) clearInterval(countdowns[timerId]); // Clear existing countdown for this timer\n//\n//     countdowns[timerId] = setInterval(function() {\n//         time--;\n//         var hours = Math.floor(time / 3600);\n//         var minutes = Math.floor((time % 3600) / 60);\n//         var seconds = time % 60;\n//\n//         hours = hours < 10 ? '0' + hours : hours; // If the hours is not 2 digits, add a '0'\n//         minutes = minutes < 10 ? '0' + minutes : minutes;\n//         seconds = seconds < 10 ? '0' + seconds : seconds;\n//\n//         document.getElementById('timer' + timerId).innerText = hours + ':' + minutes + ':' + seconds;\n//\n//         if (time <= 0) clearInterval(countdowns[timerId]);\n//     }, 1000);\n// }\n//\n// function resetTimer(timerId, initialTime) {\n//     if (countdowns[timerId]) clearInterval(countdowns[timerId]);\n//     // document.getElementById('timer' + timerId).innerText = initialTime;\n// }\n//\n// function Timers() {\n//     const navigate = useNavigate();\n//     return (\n//         <div>\n//             <h1>Laundry Timer</h1>\n//             <h2>Left Room</h2>\n//             <div class=\"row\">\n//                 <div class=\"col\">\n//                     <h2>{timer}</h2>\n//                     <div id=\"timer1\" class=\"timer\">00:00:00</div>\n//                     <button onClick={startTimer(35, '1')}>Start Washer Timer</button>\n//                     <button onClick={resetTimer('1','00:35:00')}>Reset Timer</button>\n//                 </div>\n//                 <div class=\"col\">\n//                     <div id=\"timer2\" class=\"timer\">00:00:00</div>\n//                     <button onClick={startTimer(35, '2')}>Start Dryer Timer</button>\n//                     <button onClick={resetTimer('2', '00:35:00')}>Reset Timer</button>\n//                 </div>\n//             </div>\n//\n//             <h2>Right Room</h2>\n//     <div class=\"row\">\n//         <div class=\"col\">\n//             <div id=\"timer3\" class=\"timer\">00:00:00</div>\n//             <button onclick=\"startTimer(35, '3')\">Start Washer Timer</button>\n//             <button onclick=\"resetTimer('3', '00:35:00')\">Reset Timer</button>\n//         </div>\n//         <div class=\"col\">\n//             <div id=\"timer4\" class=\"timer\">00:00:00</div>\n//             <button onclick=\"startTimer(45, '4')\">Start Dryer Timer</button>\n//             <button onclick=\"resetTimer('4', '00:45:00')\">Reset Timer</button>\n//         </div>\n//     </div>\n//         </div>\n//     )\n// }\n//\n// export default Timers;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}