{"ast":null,"code":"var _jsxFileName = \"/Users/luke/Desktop/spr24/wp2/laundry-coms/src/pages/Timers.jsx\";\nimport React from 'react';\nimport myTimer from './myTimer'; // Adjust the import path based on your file structure\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"300px\",\n      margin: \"auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"myTimer\", {\n      initialMinutes: 45\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"myTimer\", {\n      initialMinutes: 45\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"myTimer\", {\n      initialMinutes: 45\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"myTimer\", {\n      initialMinutes: 45\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n};\n_c = App;\nexport default App;\n\n// import React from \"react\";\n// import {useNavigate} from \"react-router-dom\";\n// import '../styles/styles.css';\n// // https://www.geeksforgeeks.org/how-to-create-a-countdown-timer-using-reactjs/\n//\n// var countdowns = {}; // Object to store countdown intervals for each timer\n//\n// function startTimer(duration, timerId) {\n//     var time = duration * 60; // Convert minutes to seconds\n//     if (countdowns[timerId]) clearInterval(countdowns[timerId]); // Clear existing countdown for this timer\n//\n//     countdowns[timerId] = setInterval(function() {\n//         time--;\n//         var hours = Math.floor(time / 3600);\n//         var minutes = Math.floor((time % 3600) / 60);\n//         var seconds = time % 60;\n//\n//         hours = hours < 10 ? '0' + hours : hours; // If the hours is not 2 digits, add a '0'\n//         minutes = minutes < 10 ? '0' + minutes : minutes;\n//         seconds = seconds < 10 ? '0' + seconds : seconds;\n//\n//         document.getElementById('timer' + timerId).innerText = hours + ':' + minutes + ':' + seconds;\n//\n//         if (time <= 0) clearInterval(countdowns[timerId]);\n//     }, 1000);\n// }\n//\n// function resetTimer(timerId, initialTime) {\n//     if (countdowns[timerId]) clearInterval(countdowns[timerId]);\n//     // document.getElementById('timer' + timerId).innerText = initialTime;\n// }\n//\n// function Timers() {\n//     const navigate = useNavigate();\n//     return (\n//         <div>\n//             <h1>Laundry Timer</h1>\n//             <h2>Left Room</h2>\n//             <div class=\"row\">\n//                 <div class=\"col\">\n//                     <h2>{timer}</h2>\n//                     <div id=\"timer1\" class=\"timer\">00:00:00</div>\n//                     <button onClick={startTimer(35, '1')}>Start Washer Timer</button>\n//                     <button onClick={resetTimer('1','00:35:00')}>Reset Timer</button>\n//                 </div>\n//                 <div class=\"col\">\n//                     <div id=\"timer2\" class=\"timer\">00:00:00</div>\n//                     <button onClick={startTimer(35, '2')}>Start Dryer Timer</button>\n//                     <button onClick={resetTimer('2', '00:35:00')}>Reset Timer</button>\n//                 </div>\n//             </div>\n//\n//             <h2>Right Room</h2>\n//     <div class=\"row\">\n//         <div class=\"col\">\n//             <div id=\"timer3\" class=\"timer\">00:00:00</div>\n//             <button onclick=\"startTimer(35, '3')\">Start Washer Timer</button>\n//             <button onclick=\"resetTimer('3', '00:35:00')\">Reset Timer</button>\n//         </div>\n//         <div class=\"col\">\n//             <div id=\"timer4\" class=\"timer\">00:00:00</div>\n//             <button onclick=\"startTimer(45, '4')\">Start Dryer Timer</button>\n//             <button onclick=\"resetTimer('4', '00:45:00')\">Reset Timer</button>\n//         </div>\n//     </div>\n//         </div>\n//     )\n// }\n//\n// export default Timers;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","myTimer","jsxDEV","_jsxDEV","App","style","width","margin","children","initialMinutes","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/luke/Desktop/spr24/wp2/laundry-coms/src/pages/Timers.jsx"],"sourcesContent":["import React from 'react';\nimport myTimer from './myTimer'; // Adjust the import path based on your file structure\n\nconst App = () => {\n    return (\n        <div style={{ width: \"300px\", margin: \"auto\" }}>\n            <myTimer initialMinutes={45} />\n            <myTimer initialMinutes={45} />\n            <myTimer initialMinutes={45} />\n            <myTimer initialMinutes={45} />\n        </div>\n    );\n};\n\nexport default App;\n\n\n\n\n\n// import React from \"react\";\n// import {useNavigate} from \"react-router-dom\";\n// import '../styles/styles.css';\n// // https://www.geeksforgeeks.org/how-to-create-a-countdown-timer-using-reactjs/\n//\n// var countdowns = {}; // Object to store countdown intervals for each timer\n//\n// function startTimer(duration, timerId) {\n//     var time = duration * 60; // Convert minutes to seconds\n//     if (countdowns[timerId]) clearInterval(countdowns[timerId]); // Clear existing countdown for this timer\n//\n//     countdowns[timerId] = setInterval(function() {\n//         time--;\n//         var hours = Math.floor(time / 3600);\n//         var minutes = Math.floor((time % 3600) / 60);\n//         var seconds = time % 60;\n//\n//         hours = hours < 10 ? '0' + hours : hours; // If the hours is not 2 digits, add a '0'\n//         minutes = minutes < 10 ? '0' + minutes : minutes;\n//         seconds = seconds < 10 ? '0' + seconds : seconds;\n//\n//         document.getElementById('timer' + timerId).innerText = hours + ':' + minutes + ':' + seconds;\n//\n//         if (time <= 0) clearInterval(countdowns[timerId]);\n//     }, 1000);\n// }\n//\n// function resetTimer(timerId, initialTime) {\n//     if (countdowns[timerId]) clearInterval(countdowns[timerId]);\n//     // document.getElementById('timer' + timerId).innerText = initialTime;\n// }\n//\n// function Timers() {\n//     const navigate = useNavigate();\n//     return (\n//         <div>\n//             <h1>Laundry Timer</h1>\n//             <h2>Left Room</h2>\n//             <div class=\"row\">\n//                 <div class=\"col\">\n//                     <h2>{timer}</h2>\n//                     <div id=\"timer1\" class=\"timer\">00:00:00</div>\n//                     <button onClick={startTimer(35, '1')}>Start Washer Timer</button>\n//                     <button onClick={resetTimer('1','00:35:00')}>Reset Timer</button>\n//                 </div>\n//                 <div class=\"col\">\n//                     <div id=\"timer2\" class=\"timer\">00:00:00</div>\n//                     <button onClick={startTimer(35, '2')}>Start Dryer Timer</button>\n//                     <button onClick={resetTimer('2', '00:35:00')}>Reset Timer</button>\n//                 </div>\n//             </div>\n//\n//             <h2>Right Room</h2>\n//     <div class=\"row\">\n//         <div class=\"col\">\n//             <div id=\"timer3\" class=\"timer\">00:00:00</div>\n//             <button onclick=\"startTimer(35, '3')\">Start Washer Timer</button>\n//             <button onclick=\"resetTimer('3', '00:35:00')\">Reset Timer</button>\n//         </div>\n//         <div class=\"col\">\n//             <div id=\"timer4\" class=\"timer\">00:00:00</div>\n//             <button onclick=\"startTimer(45, '4')\">Start Dryer Timer</button>\n//             <button onclick=\"resetTimer('4', '00:45:00')\">Reset Timer</button>\n//         </div>\n//     </div>\n//         </div>\n//     )\n// }\n//\n// export default Timers;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,WAAW,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EACd,oBACID,OAAA;IAAKE,KAAK,EAAE;MAAEC,KAAK,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC3CL,OAAA;MAASM,cAAc,EAAE;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/BV,OAAA;MAASM,cAAc,EAAE;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/BV,OAAA;MAASM,cAAc,EAAE;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/BV,OAAA;MAASM,cAAc,EAAE;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9B,CAAC;AAEd,CAAC;AAACC,EAAA,GATIV,GAAG;AAWT,eAAeA,GAAG;;AAMlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}